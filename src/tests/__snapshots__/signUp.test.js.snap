// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`signUp email recognises keyboard input 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label>
          Full Name:
          <input
            name="fullName"
            onChange={[Function]}
            type="text"
            value="Fake Name"
          />
        </label>
        <br />
        <label>
          Email:
          <input
            name="email"
            onChange={[Function]}
            type="email"
            value=""
          />
        </label>
        <br />
        <label>
          Password:
          <input
            name="password"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <label>
          Password Confirmation:
          <input
            name="passwordConfirmation"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <input
          type="submit"
          value="Submit"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>,
          <br />,
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </label>,
          <br />,
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <input
            type="submit"
            value="Submit"
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Full Name:",
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Full Name:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fullName",
                "onChange": [Function],
                "type": "text",
                "value": "Fake Name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Email:",
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Email:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password:",
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password Confirmation:",
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password Confirmation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "passwordConfirmation",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>
          <br />
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </label>
          <br />
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <input
            type="submit"
            value="Submit"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Full Name:
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />
            </label>,
            <br />,
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </label>,
            <br />,
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <label>
              Password Confirmation:
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <input
              type="submit"
              value="Submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Full Name:",
                <input
                  name="fullName"
                  onChange={[Function]}
                  type="text"
                  value="Fake Name"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Full Name:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fullName",
                  "onChange": [Function],
                  "type": "text",
                  "value": "Fake Name",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password:",
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password Confirmation:",
                <input
                  name="passwordConfirmation"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password Confirmation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "passwordConfirmation",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`signUp fullName recognises keyboard input 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label>
          Full Name:
          <input
            name="fullName"
            onChange={[Function]}
            type="text"
            value=""
          />
        </label>
        <br />
        <label>
          Email:
          <input
            name="email"
            onChange={[Function]}
            type="email"
            value=""
          />
        </label>
        <br />
        <label>
          Password:
          <input
            name="password"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <label>
          Password Confirmation:
          <input
            name="passwordConfirmation"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <input
          type="submit"
          value="Submit"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value=""
            />
          </label>,
          <br />,
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </label>,
          <br />,
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <input
            type="submit"
            value="Submit"
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Full Name:",
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Full Name:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fullName",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Email:",
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Email:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password:",
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password Confirmation:",
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password Confirmation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "passwordConfirmation",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value=""
            />
          </label>
          <br />
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </label>
          <br />
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <input
            type="submit"
            value="Submit"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Full Name:
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value=""
              />
            </label>,
            <br />,
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </label>,
            <br />,
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <label>
              Password Confirmation:
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <input
              type="submit"
              value="Submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Full Name:",
                <input
                  name="fullName"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Full Name:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fullName",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password:",
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password Confirmation:",
                <input
                  name="passwordConfirmation"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password Confirmation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "passwordConfirmation",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`signUp password recognises keyboard input 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label>
          Full Name:
          <input
            name="fullName"
            onChange={[Function]}
            type="text"
            value="Fake Name"
          />
        </label>
        <br />
        <label>
          Email:
          <input
            name="email"
            onChange={[Function]}
            type="email"
            value="fakeemail@fakeemail.com"
          />
        </label>
        <br />
        <label>
          Password:
          <input
            name="password"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <label>
          Password Confirmation:
          <input
            name="passwordConfirmation"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <input
          type="submit"
          value="Submit"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>,
          <br />,
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value="fakeemail@fakeemail.com"
            />
          </label>,
          <br />,
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <input
            type="submit"
            value="Submit"
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Full Name:",
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Full Name:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fullName",
                "onChange": [Function],
                "type": "text",
                "value": "Fake Name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Email:",
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value="fakeemail@fakeemail.com"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Email:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "type": "email",
                "value": "fakeemail@fakeemail.com",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password:",
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password Confirmation:",
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password Confirmation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "passwordConfirmation",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>
          <br />
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value="fakeemail@fakeemail.com"
            />
          </label>
          <br />
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <input
            type="submit"
            value="Submit"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Full Name:
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />
            </label>,
            <br />,
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value="fakeemail@fakeemail.com"
              />
            </label>,
            <br />,
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <label>
              Password Confirmation:
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <input
              type="submit"
              value="Submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Full Name:",
                <input
                  name="fullName"
                  onChange={[Function]}
                  type="text"
                  value="Fake Name"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Full Name:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fullName",
                  "onChange": [Function],
                  "type": "text",
                  "value": "Fake Name",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value="fakeemail@fakeemail.com"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "fakeemail@fakeemail.com",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password:",
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password Confirmation:",
                <input
                  name="passwordConfirmation"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password Confirmation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "passwordConfirmation",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`signUp passwordConfirmation recognises keyboard input 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
      >
        <label>
          Full Name:
          <input
            name="fullName"
            onChange={[Function]}
            type="text"
            value="Fake Name"
          />
        </label>
        <br />
        <label>
          Email:
          <input
            name="email"
            onChange={[Function]}
            type="email"
            value="fakeemail@fakeemail.com"
          />
        </label>
        <br />
        <label>
          Password:
          <input
            name="password"
            onChange={[Function]}
            type="password"
            value="fakepassword"
          />
        </label>
        <br />
        <label>
          Password Confirmation:
          <input
            name="passwordConfirmation"
            onChange={[Function]}
            type="password"
            value=""
          />
        </label>
        <br />
        <input
          type="submit"
          value="Submit"
        />
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>,
          <br />,
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value="fakeemail@fakeemail.com"
            />
          </label>,
          <br />,
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value="fakepassword"
            />
          </label>,
          <br />,
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>,
          <br />,
          <input
            type="submit"
            value="Submit"
          />,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Full Name:",
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Full Name:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fullName",
                "onChange": [Function],
                "type": "text",
                "value": "Fake Name",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Email:",
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value="fakeemail@fakeemail.com"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Email:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "type": "email",
                "value": "fakeemail@fakeemail.com",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password:",
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value="fakepassword"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "type": "password",
                "value": "fakepassword",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Password Confirmation:",
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Password Confirmation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "passwordConfirmation",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <label>
            Full Name:
            <input
              name="fullName"
              onChange={[Function]}
              type="text"
              value="Fake Name"
            />
          </label>
          <br />
          <label>
            Email:
            <input
              name="email"
              onChange={[Function]}
              type="email"
              value="fakeemail@fakeemail.com"
            />
          </label>
          <br />
          <label>
            Password:
            <input
              name="password"
              onChange={[Function]}
              type="password"
              value="fakepassword"
            />
          </label>
          <br />
          <label>
            Password Confirmation:
            <input
              name="passwordConfirmation"
              onChange={[Function]}
              type="password"
              value=""
            />
          </label>
          <br />
          <input
            type="submit"
            value="Submit"
          />
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Full Name:
              <input
                name="fullName"
                onChange={[Function]}
                type="text"
                value="Fake Name"
              />
            </label>,
            <br />,
            <label>
              Email:
              <input
                name="email"
                onChange={[Function]}
                type="email"
                value="fakeemail@fakeemail.com"
              />
            </label>,
            <br />,
            <label>
              Password:
              <input
                name="password"
                onChange={[Function]}
                type="password"
                value="fakepassword"
              />
            </label>,
            <br />,
            <label>
              Password Confirmation:
              <input
                name="passwordConfirmation"
                onChange={[Function]}
                type="password"
                value=""
              />
            </label>,
            <br />,
            <input
              type="submit"
              value="Submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Full Name:",
                <input
                  name="fullName"
                  onChange={[Function]}
                  type="text"
                  value="Fake Name"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Full Name:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fullName",
                  "onChange": [Function],
                  "type": "text",
                  "value": "Fake Name",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value="fakeemail@fakeemail.com"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "fakeemail@fakeemail.com",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password:",
                <input
                  name="password"
                  onChange={[Function]}
                  type="password"
                  value="fakepassword"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "fakepassword",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password Confirmation:",
                <input
                  name="passwordConfirmation"
                  onChange={[Function]}
                  type="password"
                  value=""
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password Confirmation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "passwordConfirmation",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
